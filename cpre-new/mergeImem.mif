DEPTH=1024; 	% Memory depth and width are required 
		% DEPTH is the number of addresses 
WIDTH = 32; 	% WIDTH is the number of bits of data per word
		% DEPTH and WIDTH should be entered as decimal numbers

ADDRESS_RADIX = DEC; 	% Address and value radixes are required
DATA_RADIX = BIN; 	% Enter BIN, DEC, HEX, OCT, or UNS; unless
			% otherwise specified, radixes = HEX

-- Specify values for addresses, which can be single address or range
-- SOME THINGS TO CONSIDER
-- 1) This memory is word-addressable, versus the MIPS conceptual byte-addressable memory.
--    This means that address 1 corresponds to word 1, address 2 corresponds to word 2, etc.
--    Since MIPS will be generating byte addresses, you will have to create some (very simple)
--    logic in your VHDL wrapper to deal with byte/word offsets. 
-- 2) The "single address" notation seems to be least likely to cause confusion so that is what
--    I recommend. 
-- 3) The values need to be in 32-bit hex form (i.e. don't use F when you really mean 0000000F).

CONTENT
BEGIN

0: 

00100000000010000000000000000011

00100000000010010000000000000110

00100000000010100000000000000010

00100000000010110000000000000001

00100000000011000000000000000100

00100000000011010000000000000101

00100000000011100000000000000000

10100001110010000000000000000000

10100001110010010000000000000100

10100001110010100000000000001000

10100001110010110000000000001100

10100001110011000000000000010000

10100001110011010000000000010100

00000000000011100010000000100000

00100000000011100000000000001010

00000000000011100010100000100000

00100000000001100000000000000110

00000000000001000100000000100000

00000000000001010100100000100000

00000000000001100101000000100000

00100000000010110000000000000001

00001000000000000000000000010111

00000000000010110101100001000000

00000001011010100111100000101010

00010001111000000000000001001010

00000000000000000110000000100000

00001000000000000000000000011101

00000000000010111001100001000000

00000001100100110110000000100000

00000001100010111001100000100000

00000010011010101001100000101010

00010010011000001111111111110110

00000001100010110110100000100000

00000001101010110111000000100000

00000001010011100111100000101010

00010001111000000000000000000001

00000000000010100111000000100000

00000000000011001000000000100000

00000000000011001000100000100000

00000000000011011001000000100000

00000010001011010111100000101010

00010001111000000000000000010111

00000010010011100111100000101010

00010001111000000000000000010101

00000000000100011001100010000000

00000010011010001001100000100000

10000010011100110000000000000000

00000000000100101010000010000000

00000010100010001010000000100000

10000010100101000000000000000000

00000010100100110111100000101010

00010101111000000000000000000111

00100000000011110000000000000100

00000010000011110000000000011000

00000000000000001010000000010010

00000010100010011010000000100000

10100010100100110000000000000000

00100010001100010000000000000001

00001000000000000000000000111111

00000000000100001001100010000000

00000010011010011001100000100000

10100010011101000000000000000000

00100010010100100000000000000001

00100010000100000000000000000001

00001000000000000000000000101000

00000010001011010111100000101010

00010001111000000000000000001001

00000000000100011001100010000000

00000010011010001001100000100000

10000010011100110000000000000000

00000000000100001010000010000000

00000010100010011010000000100000

10101110100100110000000000000000

00100010001100010000000000000001

00100010000100000000000000000001

00001000000000000000000001000001

00000010010011100111100000101010

00010001111000000000000000001001

00000000000100101010000010000000

00000010100010001010000000100000

10000010100101000000000000000000

00000000000100001001100010000000

00000010011010011001100000100000

10100010011101000000000000000000

00100010010100100000000000000001

00100010000100000000000000000001

00001000000000000000000001001100

00000000000011001000000000100000

00001000000000000000000001011010

00100010000100000000000000000001

00000010000011100111100000101010

00010001111000001111111110111111

00000000000100001010000010000000

00000010100010011010000000100000

10000010100100110000000000000000

00000000000100001010000010000000

00000010100010001010000000100000

10100010100100110000000000000000

00001000000000000000000001011001

00000000000000000000000000100000;		

END;
